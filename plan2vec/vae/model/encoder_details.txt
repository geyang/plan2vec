conv1.weight: torch.Size([64, 1, 7, 7])
bn1.weight: torch.Size([64])
bn1.bias: torch.Size([64])
bn1.running_mean: torch.Size([64])
bn1.running_var: torch.Size([64])
bn1.num_batches_tracked: torch.Size([])
layer1.0.conv1.weight: torch.Size([64, 64, 3, 3])
layer1.0.bn1.weight: torch.Size([64])
layer1.0.bn1.bias: torch.Size([64])
layer1.0.bn1.running_mean: torch.Size([64])
layer1.0.bn1.running_var: torch.Size([64])
layer1.0.bn1.num_batches_tracked: torch.Size([])
layer1.0.conv2.weight: torch.Size([64, 64, 3, 3])
layer1.0.bn2.weight: torch.Size([64])
layer1.0.bn2.bias: torch.Size([64])
layer1.0.bn2.running_mean: torch.Size([64])
layer1.0.bn2.running_var: torch.Size([64])
layer1.0.bn2.num_batches_tracked: torch.Size([])
layer1.1.conv1.weight: torch.Size([64, 64, 3, 3])
layer1.1.bn1.weight: torch.Size([64])
layer1.1.bn1.bias: torch.Size([64])
layer1.1.bn1.running_mean: torch.Size([64])
layer1.1.bn1.running_var: torch.Size([64])
layer1.1.bn1.num_batches_tracked: torch.Size([])
layer1.1.conv2.weight: torch.Size([64, 64, 3, 3])
layer1.1.bn2.weight: torch.Size([64])
layer1.1.bn2.bias: torch.Size([64])
layer1.1.bn2.running_mean: torch.Size([64])
layer1.1.bn2.running_var: torch.Size([64])
layer1.1.bn2.num_batches_tracked: torch.Size([])
layer2.0.conv1.weight: torch.Size([128, 64, 3, 3])
layer2.0.bn1.weight: torch.Size([128])
layer2.0.bn1.bias: torch.Size([128])
layer2.0.bn1.running_mean: torch.Size([128])
layer2.0.bn1.running_var: torch.Size([128])
layer2.0.bn1.num_batches_tracked: torch.Size([])
layer2.0.conv2.weight: torch.Size([128, 128, 3, 3])
layer2.0.bn2.weight: torch.Size([128])
layer2.0.bn2.bias: torch.Size([128])
layer2.0.bn2.running_mean: torch.Size([128])
layer2.0.bn2.running_var: torch.Size([128])
layer2.0.bn2.num_batches_tracked: torch.Size([])
layer2.0.downsample.0.weight: torch.Size([128, 64, 1, 1])
layer2.0.downsample.1.weight: torch.Size([128])
layer2.0.downsample.1.bias: torch.Size([128])
layer2.0.downsample.1.running_mean: torch.Size([128])
layer2.0.downsample.1.running_var: torch.Size([128])
layer2.0.downsample.1.num_batches_tracked: torch.Size([])
layer2.1.conv1.weight: torch.Size([128, 128, 3, 3])
layer2.1.bn1.weight: torch.Size([128])
layer2.1.bn1.bias: torch.Size([128])
layer2.1.bn1.running_mean: torch.Size([128])
layer2.1.bn1.running_var: torch.Size([128])
layer2.1.bn1.num_batches_tracked: torch.Size([])
layer2.1.conv2.weight: torch.Size([128, 128, 3, 3])
layer2.1.bn2.weight: torch.Size([128])
layer2.1.bn2.bias: torch.Size([128])
layer2.1.bn2.running_mean: torch.Size([128])
layer2.1.bn2.running_var: torch.Size([128])
layer2.1.bn2.num_batches_tracked: torch.Size([])
layer3.0.conv1.weight: torch.Size([256, 128, 3, 3])
layer3.0.bn1.weight: torch.Size([256])
layer3.0.bn1.bias: torch.Size([256])
layer3.0.bn1.running_mean: torch.Size([256])
layer3.0.bn1.running_var: torch.Size([256])
layer3.0.bn1.num_batches_tracked: torch.Size([])
layer3.0.conv2.weight: torch.Size([256, 256, 3, 3])
layer3.0.bn2.weight: torch.Size([256])
layer3.0.bn2.bias: torch.Size([256])
layer3.0.bn2.running_mean: torch.Size([256])
layer3.0.bn2.running_var: torch.Size([256])
layer3.0.bn2.num_batches_tracked: torch.Size([])
layer3.0.downsample.0.weight: torch.Size([256, 128, 1, 1])
layer3.0.downsample.1.weight: torch.Size([256])
layer3.0.downsample.1.bias: torch.Size([256])
layer3.0.downsample.1.running_mean: torch.Size([256])
layer3.0.downsample.1.running_var: torch.Size([256])
layer3.0.downsample.1.num_batches_tracked: torch.Size([])
layer3.1.conv1.weight: torch.Size([256, 256, 3, 3])
layer3.1.bn1.weight: torch.Size([256])
layer3.1.bn1.bias: torch.Size([256])
layer3.1.bn1.running_mean: torch.Size([256])
layer3.1.bn1.running_var: torch.Size([256])
layer3.1.bn1.num_batches_tracked: torch.Size([])
layer3.1.conv2.weight: torch.Size([256, 256, 3, 3])
layer3.1.bn2.weight: torch.Size([256])
layer3.1.bn2.bias: torch.Size([256])
layer3.1.bn2.running_mean: torch.Size([256])
layer3.1.bn2.running_var: torch.Size([256])
layer3.1.bn2.num_batches_tracked: torch.Size([])
layer4.0.conv1.weight: torch.Size([512, 256, 3, 3])
layer4.0.bn1.weight: torch.Size([512])
layer4.0.bn1.bias: torch.Size([512])
layer4.0.bn1.running_mean: torch.Size([512])
layer4.0.bn1.running_var: torch.Size([512])
layer4.0.bn1.num_batches_tracked: torch.Size([])
layer4.0.conv2.weight: torch.Size([512, 512, 3, 3])
layer4.0.bn2.weight: torch.Size([512])
layer4.0.bn2.bias: torch.Size([512])
layer4.0.bn2.running_mean: torch.Size([512])
layer4.0.bn2.running_var: torch.Size([512])
layer4.0.bn2.num_batches_tracked: torch.Size([])
layer4.0.downsample.0.weight: torch.Size([512, 256, 1, 1])
layer4.0.downsample.1.weight: torch.Size([512])
layer4.0.downsample.1.bias: torch.Size([512])
layer4.0.downsample.1.running_mean: torch.Size([512])
layer4.0.downsample.1.running_var: torch.Size([512])
layer4.0.downsample.1.num_batches_tracked: torch.Size([])
layer4.1.conv1.weight: torch.Size([512, 512, 3, 3])
layer4.1.bn1.weight: torch.Size([512])
layer4.1.bn1.bias: torch.Size([512])
layer4.1.bn1.running_mean: torch.Size([512])
layer4.1.bn1.running_var: torch.Size([512])
layer4.1.bn1.num_batches_tracked: torch.Size([])
layer4.1.conv2.weight: torch.Size([512, 512, 3, 3])
layer4.1.bn2.weight: torch.Size([512])
layer4.1.bn2.bias: torch.Size([512])
layer4.1.bn2.running_mean: torch.Size([512])
layer4.1.bn2.running_var: torch.Size([512])
layer4.1.bn2.num_batches_tracked: torch.Size([])
fc.weight: torch.Size([2, 512])
fc.bias: torch.Size([2])
var.weight: torch.Size([2, 512])
var.bias: torch.Size([2])
conv1.weight: torch.Size([64, 1, 7, 7])
bn1.weight: torch.Size([64])
bn1.bias: torch.Size([64])
bn1.running_mean: torch.Size([64])
bn1.running_var: torch.Size([64])
bn1.num_batches_tracked: torch.Size([])
layer1.0.conv1.weight: torch.Size([64, 64, 3, 3])
layer1.0.bn1.weight: torch.Size([64])
layer1.0.bn1.bias: torch.Size([64])
layer1.0.bn1.running_mean: torch.Size([64])
layer1.0.bn1.running_var: torch.Size([64])
layer1.0.bn1.num_batches_tracked: torch.Size([])
layer1.0.conv2.weight: torch.Size([64, 64, 3, 3])
layer1.0.bn2.weight: torch.Size([64])
layer1.0.bn2.bias: torch.Size([64])
layer1.0.bn2.running_mean: torch.Size([64])
layer1.0.bn2.running_var: torch.Size([64])
layer1.0.bn2.num_batches_tracked: torch.Size([])
layer1.1.conv1.weight: torch.Size([64, 64, 3, 3])
layer1.1.bn1.weight: torch.Size([64])
layer1.1.bn1.bias: torch.Size([64])
layer1.1.bn1.running_mean: torch.Size([64])
layer1.1.bn1.running_var: torch.Size([64])
layer1.1.bn1.num_batches_tracked: torch.Size([])
layer1.1.conv2.weight: torch.Size([64, 64, 3, 3])
layer1.1.bn2.weight: torch.Size([64])
layer1.1.bn2.bias: torch.Size([64])
layer1.1.bn2.running_mean: torch.Size([64])
layer1.1.bn2.running_var: torch.Size([64])
layer1.1.bn2.num_batches_tracked: torch.Size([])
layer2.0.conv1.weight: torch.Size([128, 64, 3, 3])
layer2.0.bn1.weight: torch.Size([128])
layer2.0.bn1.bias: torch.Size([128])
layer2.0.bn1.running_mean: torch.Size([128])
layer2.0.bn1.running_var: torch.Size([128])
layer2.0.bn1.num_batches_tracked: torch.Size([])
layer2.0.conv2.weight: torch.Size([128, 128, 3, 3])
layer2.0.bn2.weight: torch.Size([128])
layer2.0.bn2.bias: torch.Size([128])
layer2.0.bn2.running_mean: torch.Size([128])
layer2.0.bn2.running_var: torch.Size([128])
layer2.0.bn2.num_batches_tracked: torch.Size([])
layer2.0.downsample.0.weight: torch.Size([128, 64, 1, 1])
layer2.0.downsample.1.weight: torch.Size([128])
layer2.0.downsample.1.bias: torch.Size([128])
layer2.0.downsample.1.running_mean: torch.Size([128])
layer2.0.downsample.1.running_var: torch.Size([128])
layer2.0.downsample.1.num_batches_tracked: torch.Size([])
layer2.1.conv1.weight: torch.Size([128, 128, 3, 3])
layer2.1.bn1.weight: torch.Size([128])
layer2.1.bn1.bias: torch.Size([128])
layer2.1.bn1.running_mean: torch.Size([128])
layer2.1.bn1.running_var: torch.Size([128])
layer2.1.bn1.num_batches_tracked: torch.Size([])
layer2.1.conv2.weight: torch.Size([128, 128, 3, 3])
layer2.1.bn2.weight: torch.Size([128])
layer2.1.bn2.bias: torch.Size([128])
layer2.1.bn2.running_mean: torch.Size([128])
layer2.1.bn2.running_var: torch.Size([128])
layer2.1.bn2.num_batches_tracked: torch.Size([])
layer3.0.conv1.weight: torch.Size([256, 128, 3, 3])
layer3.0.bn1.weight: torch.Size([256])
layer3.0.bn1.bias: torch.Size([256])
layer3.0.bn1.running_mean: torch.Size([256])
layer3.0.bn1.running_var: torch.Size([256])
layer3.0.bn1.num_batches_tracked: torch.Size([])
layer3.0.conv2.weight: torch.Size([256, 256, 3, 3])
layer3.0.bn2.weight: torch.Size([256])
layer3.0.bn2.bias: torch.Size([256])
layer3.0.bn2.running_mean: torch.Size([256])
layer3.0.bn2.running_var: torch.Size([256])
layer3.0.bn2.num_batches_tracked: torch.Size([])
layer3.0.downsample.0.weight: torch.Size([256, 128, 1, 1])
layer3.0.downsample.1.weight: torch.Size([256])
layer3.0.downsample.1.bias: torch.Size([256])
layer3.0.downsample.1.running_mean: torch.Size([256])
layer3.0.downsample.1.running_var: torch.Size([256])
layer3.0.downsample.1.num_batches_tracked: torch.Size([])
layer3.1.conv1.weight: torch.Size([256, 256, 3, 3])
layer3.1.bn1.weight: torch.Size([256])
layer3.1.bn1.bias: torch.Size([256])
layer3.1.bn1.running_mean: torch.Size([256])
layer3.1.bn1.running_var: torch.Size([256])
layer3.1.bn1.num_batches_tracked: torch.Size([])
layer3.1.conv2.weight: torch.Size([256, 256, 3, 3])
layer3.1.bn2.weight: torch.Size([256])
layer3.1.bn2.bias: torch.Size([256])
layer3.1.bn2.running_mean: torch.Size([256])
layer3.1.bn2.running_var: torch.Size([256])
layer3.1.bn2.num_batches_tracked: torch.Size([])
layer4.0.conv1.weight: torch.Size([512, 256, 3, 3])
layer4.0.bn1.weight: torch.Size([512])
layer4.0.bn1.bias: torch.Size([512])
layer4.0.bn1.running_mean: torch.Size([512])
layer4.0.bn1.running_var: torch.Size([512])
layer4.0.bn1.num_batches_tracked: torch.Size([])
layer4.0.conv2.weight: torch.Size([512, 512, 3, 3])
layer4.0.bn2.weight: torch.Size([512])
layer4.0.bn2.bias: torch.Size([512])
layer4.0.bn2.running_mean: torch.Size([512])
layer4.0.bn2.running_var: torch.Size([512])
layer4.0.bn2.num_batches_tracked: torch.Size([])
layer4.0.downsample.0.weight: torch.Size([512, 256, 1, 1])
layer4.0.downsample.1.weight: torch.Size([512])
layer4.0.downsample.1.bias: torch.Size([512])
layer4.0.downsample.1.running_mean: torch.Size([512])
layer4.0.downsample.1.running_var: torch.Size([512])
layer4.0.downsample.1.num_batches_tracked: torch.Size([])
layer4.1.conv1.weight: torch.Size([512, 512, 3, 3])
layer4.1.bn1.weight: torch.Size([512])
layer4.1.bn1.bias: torch.Size([512])
layer4.1.bn1.running_mean: torch.Size([512])
layer4.1.bn1.running_var: torch.Size([512])
layer4.1.bn1.num_batches_tracked: torch.Size([])
layer4.1.conv2.weight: torch.Size([512, 512, 3, 3])
layer4.1.bn2.weight: torch.Size([512])
layer4.1.bn2.bias: torch.Size([512])
layer4.1.bn2.running_mean: torch.Size([512])
layer4.1.bn2.running_var: torch.Size([512])
layer4.1.bn2.num_batches_tracked: torch.Size([])
fc.weight: torch.Size([2, 512])
fc.bias: torch.Size([2])
var.weight: torch.Size([2, 512])
var.bias: torch.Size([2])
